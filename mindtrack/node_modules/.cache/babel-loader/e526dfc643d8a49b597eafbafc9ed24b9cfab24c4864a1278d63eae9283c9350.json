{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orcle\\\\Desktop\\\\MindTracker\\\\mindtrack\\\\src\\\\Pages\\\\Inicio\\\\Inicio.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Importando o React e useState\nimport \"./Inicio.css\";\nimport Menu from \"../../Menu\";\nimport Header from '../../Header';\nimport moment from 'moment';\nimport 'moment/locale/pt-br';\nimport Calendar from '../../Calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('pt-br');\n\n// Função que retorna os dias do mês especificado em formato Moment.js\nfunction getDaysInMonth(month, year) {\n  const date = moment(`${year}-${month}-01`);\n  const days = [];\n  while (date.month() === month - 1) {\n    // Enquanto o mês for o mesmo, continua adicionando ao array\n    days.push(date.clone()); // Usando clone() para criar um novo objeto moment.js para cada dia\n    date.add(1, 'day'); // Adiciona um dia à data\n  }\n\n  return days;\n}\nconst Inicio = () => {\n  _s();\n  const [currentMonth, setCurrentMonth] = useState(moment()); // Armazenando o mês atual usando useState\n  const days = getDaysInMonth(currentMonth.month() + 1, currentMonth.year()); // Obtendo os dias do mês atual\n\n  // Função para ir para o mês anterior\n  function previousMonth() {\n    setCurrentMonth(prevMonth => prevMonth.clone().subtract(1, 'month')); // Setando o novo estado usando setState e moment.js\n  }\n\n  // Função para ir para o próximo mês\n  function nextMonth() {\n    setCurrentMonth(prevMonth => prevMonth.clone().add(1, 'month')); // Setando o novo estado usando setState e moment.js\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item item1-1\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item item1-2\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item item2\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Inicio, \"BAkPoDL/z4Q56P6gywSInMf/QMc=\");\n_c = Inicio;\nexport default Inicio;\nvar _c;\n$RefreshReg$(_c, \"Inicio\");","map":{"version":3,"names":["React","useState","Menu","Header","moment","Calendar","jsxDEV","_jsxDEV","locale","getDaysInMonth","month","year","date","days","push","clone","add","Inicio","_s","currentMonth","setCurrentMonth","previousMonth","prevMonth","subtract","nextMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/orcle/Desktop/MindTracker/mindtrack/src/Pages/Inicio/Inicio.js"],"sourcesContent":["import React, { useState } from 'react'; // Importando o React e useState\r\nimport \"./Inicio.css\"; \r\nimport Menu from \"../../Menu\";\r\nimport Header from '../../Header';\r\nimport moment from 'moment';\r\nimport 'moment/locale/pt-br';\r\nimport Calendar from '../../Calendar';\r\nmoment.locale('pt-br');\r\n\r\n// Função que retorna os dias do mês especificado em formato Moment.js\r\nfunction getDaysInMonth(month, year) {\r\n  const date = moment(`${year}-${month}-01`);\r\n  const days = [];\r\n\r\n  while (date.month() === month - 1) { // Enquanto o mês for o mesmo, continua adicionando ao array\r\n    days.push(date.clone()); // Usando clone() para criar um novo objeto moment.js para cada dia\r\n    date.add(1, 'day'); // Adiciona um dia à data\r\n  }\r\n\r\n  return days;\r\n}\r\n\r\nconst Inicio = () => {\r\n  const [currentMonth, setCurrentMonth] = useState(moment()); // Armazenando o mês atual usando useState\r\n  const days = getDaysInMonth(currentMonth.month() + 1, currentMonth.year()); // Obtendo os dias do mês atual\r\n  \r\n  // Função para ir para o mês anterior\r\n  function previousMonth() {\r\n    setCurrentMonth(prevMonth => prevMonth.clone().subtract(1, 'month')); // Setando o novo estado usando setState e moment.js\r\n  }\r\n\r\n  // Função para ir para o próximo mês\r\n  function nextMonth() {\r\n    setCurrentMonth(prevMonth => prevMonth.clone().add(1, 'month')); // Setando o novo estado usando setState e moment.js\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">       \r\n      <div className=\"item item1-1\"><Menu /></div>\r\n      <div className=\"item item1-2\"><Header/></div>\r\n      <div className=\"item item2\"><Calendar/></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inicio;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,OAAO,cAAc;AACrB,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,qBAAqB;AAC5B,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtCH,MAAM,CAACI,MAAM,CAAC,OAAO,CAAC;;AAEtB;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACnC,MAAMC,IAAI,GAAGR,MAAM,CAAE,GAAEO,IAAK,IAAGD,KAAM,KAAI,CAAC;EAC1C,MAAMG,IAAI,GAAG,EAAE;EAEf,OAAOD,IAAI,CAACF,KAAK,CAAC,CAAC,KAAKA,KAAK,GAAG,CAAC,EAAE;IAAE;IACnCG,IAAI,CAACC,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzBH,IAAI,CAACI,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACtB;;EAEA,OAAOH,IAAI;AACb;AAEA,MAAMI,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMS,IAAI,GAAGJ,cAAc,CAACU,YAAY,CAACT,KAAK,CAAC,CAAC,GAAG,CAAC,EAAES,YAAY,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5E;EACA,SAASU,aAAaA,CAAA,EAAG;IACvBD,eAAe,CAACE,SAAS,IAAIA,SAAS,CAACP,KAAK,CAAC,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACxE;;EAEA;EACA,SAASC,SAASA,CAAA,EAAG;IACnBJ,eAAe,CAACE,SAAS,IAAIA,SAAS,CAACP,KAAK,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EACnE;;EAEA,oBACET,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAACnB,OAAA,CAACL,IAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5CvB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,eAACnB,OAAA,CAACJ,MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7CvB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAACnB,OAAA,CAACF,QAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBID,MAAM;AAAAc,EAAA,GAANd,MAAM;AAuBZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}