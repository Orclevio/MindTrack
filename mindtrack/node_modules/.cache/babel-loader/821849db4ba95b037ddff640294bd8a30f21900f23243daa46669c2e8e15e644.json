{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\orcle\\\\Desktop\\\\MindTracker\\\\mindtrack\\\\src\\\\Calendar.js\";\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport \"./Calendar.css\";\nimport 'moment/locale/pt-br';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.locale('pt-br');\nfunction getDaysInMonth(month, year) {\n  // Cria uma data utilizando Moment.js com o primeiro dia do mês e ano fornecidos\n  const date = moment(`${year}-${month}-01`);\n  const weeks = [];\n\n  // Enquanto o mês da data for igual ao mês fornecido, itera para obter os dias da semana\n  while (date.month() === month - 1) {\n    const week = [];\n    for (let i = 0; i < 7; i++) {\n      // Clona a data atual para preservar seu valor\n      week.push(date.clone());\n      // Adiciona um dia à data\n      date.add(1, 'day');\n    }\n    // Adiciona a semana à matriz de semanas\n    weeks.push(week);\n  }\n\n  // Retorna a matriz de semanas contendo os dias do mês\n  return weeks;\n}\n\n// ...código anterior omitido para concisão\n\n// ...código anterior omitido para concisão\n\nconst Calendar = _ref => {\n  let {\n    colorCode\n  } = _ref;\n  // ...código anterior omitido para concisão\n\n  // Define as classes CSS dos botões com base no valor de colorCode\n  const button1Classes = `button1 ${colorCode === 0 ? 'green' : colorCode === 1 ? 'gray' : 'pink'}`;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"calendar-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: weeks.map((week, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: week.map(day => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"BlocoDia\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: day.format('ddd').toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: day.format('D')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: button1Classes,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"Titulo1bnt\",\n                  children: \"Paciente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"Titulo2bnt\",\n                  children: \"Fernada A Silva\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: button1Classes,\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"Titulo1bnt\",\n                  children: \"Paciente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"Titulo2bnt\",\n                  children: \"Fernada A Silva\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonVerTodos\",\n                children: \"Mostrar Todos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, day.format('D MMMM YYYY'), true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","moment","jsxDEV","_jsxDEV","locale","getDaysInMonth","month","year","date","weeks","week","i","push","clone","add","Calendar","_ref","colorCode","button1Classes","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","day","format","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/orcle/Desktop/MindTracker/mindtrack/src/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport \"./Calendar.css\";\r\nimport 'moment/locale/pt-br';\r\nmoment.locale('pt-br');\r\n\r\n\r\nfunction getDaysInMonth(month, year) {\r\n  // Cria uma data utilizando Moment.js com o primeiro dia do mês e ano fornecidos\r\n  const date = moment(`${year}-${month}-01`);\r\n  const weeks = [];\r\n\r\n  // Enquanto o mês da data for igual ao mês fornecido, itera para obter os dias da semana\r\n  while (date.month() === month - 1) {\r\n    const week = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      // Clona a data atual para preservar seu valor\r\n      week.push(date.clone());\r\n      // Adiciona um dia à data\r\n      date.add(1, 'day');\r\n    }\r\n    // Adiciona a semana à matriz de semanas\r\n    weeks.push(week);\r\n  }\r\n\r\n  // Retorna a matriz de semanas contendo os dias do mês\r\n  return weeks;\r\n}\r\n\r\n// ...código anterior omitido para concisão\r\n\r\n// ...código anterior omitido para concisão\r\n\r\nconst Calendar = ({ colorCode }) => {\r\n  // ...código anterior omitido para concisão\r\n\r\n  // Define as classes CSS dos botões com base no valor de colorCode\r\n  const button1Classes = `button1 ${colorCode === 0 ? 'green' : colorCode === 1 ? 'gray' : 'pink'}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"calendar-header\">\r\n        {/* ...código anterior omitido para concisão */}\r\n      </div>\r\n      <table className=\"calendar-table\">\r\n        <tbody>\r\n          {/* Mapeia as semanas e dias do mês para renderizar a tabela do calendário */}\r\n          {weeks.map((week, index) => (\r\n            <tr key={index}>\r\n              {week.map((day) => (\r\n                <td className=\"BlocoDia\" key={day.format('D MMMM YYYY')}>\r\n                  <div>\r\n                    {/* Exibe o dia da semana em caixa alta */}\r\n                    <div>{day.format('ddd').toUpperCase()}</div>\r\n                    {/* Exibe o número do dia */}\r\n                    <div>{day.format('D')}</div>\r\n                  </div>\r\n                  <div>\r\n                    {/* Botões adicionais */}\r\n                    <button className={button1Classes}>\r\n                      <h1 className='Titulo1bnt'>Paciente</h1>\r\n                      <h1 className='Titulo2bnt'>Fernada A Silva</h1>\r\n                    </button>\r\n                    <button className={button1Classes}>\r\n                      <h1 className='Titulo1bnt'>Paciente</h1>\r\n                      <h1 className='Titulo2bnt'>Fernada A Silva</h1>\r\n                    </button>\r\n                    <button className='buttonVerTodos'>Mostrar Todos</button>\r\n                  </div>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}